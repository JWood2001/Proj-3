<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>Parser</name></assembly>
<members>
<member name="T:Parser.AST.Expr">
<summary>
 A MicroML expression
</summary>
</member>
<member name="M:Parser.AST.toString(Parser.AST.Expr)">
<summary>
 Pretty-print an Expr as an indented tree
</summary>
</member>
<member name="M:Parser.Parsing.parse(System.String)">
<summary>
 Public API: require EOF after expr
</summary>
</member>
<member name="P:Parser.Parsing.letParser">
<summary>
 Let-binding: let x = expr in expr
</summary>
</member>
<member name="P:Parser.Parsing.lambdaParser">
<summary>
 Lambda: fun x -&gt; expr
</summary>
</member>
<member name="P:Parser.Parsing.application">
<summary>
 Application: one or more atoms
</summary>
</member>
<member name="P:Parser.Parsing.atom">
<summary>
 Atomic term (no application)
</summary>
</member>
<member name="P:Parser.Parsing.parenExpr">
<summary>
 Parenthesized expression
</summary>
</member>
<member name="P:Parser.Parsing.expr">
<summary>
 Forward recursion
</summary>
</member>
<member name="P:Parser.Parsing.exprRef">
<summary>
 Forward recursion
</summary>
</member>
<member name="P:Parser.Parsing.pint_ws">
<summary>
 Integer literal
</summary>
</member>
<member name="P:Parser.Parsing.identifier">
<summary>
 Identifier that cannot be a keyword
</summary>
</member>
<member name="M:Parser.Parsing.ws``1">
<summary>
 Whitespace
</summary>
</member>
</members>
</doc>
